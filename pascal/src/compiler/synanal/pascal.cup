package compiler.synanal;

import java_cup.runtime.*;

import compiler.report.*;

parser code
{:
        public void syntax_error(Symbol cur_token) {
            Report.warning ("Syntax error near word '" + (String)(cur_token.value) + "'.", cur_token.left, cur_token.right);
        }

        public void report_error(String message, Object info) {
        }

        public void report_fatal_error(String message, Object info) throws Exception {
        	throw new Exception(message);
        }
:}

terminal String BOOL_CONST, CHAR_CONST, INT_CONST, NIL;
terminal String IDENTIFIER;

terminal BOOL, CHAR, INT;
terminal COLON, COMMA, DOT, DOTS, LBRACKET, LPARENTHESIS, RBRACKET, RPARENTHESIS, SEMIC;
terminal ADD, AND, DIV, EQU, GEQ, GTH, LEQ, LTH, MEM, MUL, NEQ, NOT, OR, PTR, SUB, UADD, USUB, VAL;
terminal ARRAY, ASSIGN, BEGIN, CONST, DO, ELSE, END, FOR, FUNCTION, IF, OF, PROCEDURE, PROGRAM, RECORD, THEN, TO, TYPE, VAR, WHILE;

non terminal source;
non terminal program, declaration, sentence;
non terminal constant, constant_, type, type_;
non terminal assignment, type_desc, value;
non terminal type_atom;

start with source;

source ::= program declaration sentence DOT;

program ::= | PROGRAM IDENTIFIER SEMIC;
declaration ::= | constant declaration | type declaration;
sentence ::= BEGIN END;

/*
  declarations
*/
constant ::= CONST constant_ SEMIC;
constant_ ::= assignment | assignment COMMA constant_;
/* types */
type ::= TYPE type_;
type_ ::= IDENTIFIER EQU type_desc SEMIC | IDENTIFIER EQU type_desc SEMIC type_;
type_desc ::= type_atom;
type_atom ::= BOOL | CHAR | INT;

assignment ::= IDENTIFIER EQU value;
value ::= BOOL_CONST | CHAR_CONST | INT_CONST;
